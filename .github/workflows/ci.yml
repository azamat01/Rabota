name: CI for Microservices Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job для data_bus
  data_bus:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Используем стабильную версию actions/checkout

    - name: Set up Python for data_bus
      uses: actions/setup-python@v2  # Используем стабильную версию actions/setup-python
      with:
        python-version: '3.8'

    - name: Install dependencies for data_bus
      working-directory: ./microservices_project/data_bus
      run: |
        python -m pip install --upgrade pip
        pip install pytest  # Устанавливаем pytest

    - name: Run tests for data_bus
      working-directory: ./microservices_project/data_bus
      run: |
        pytest  # Запуск тестов для data_bus

    - name: Check if build directory exists before creation (data_bus)
      working-directory: ./microservices_project/data_bus
      run: |
        echo "Checking if build directory exists:"
        ls -la ./microservices_project/data_bus  # Проверка содержимого директории
        if [ ! -d "./microservices_project/data_bus/build" ]; then
          echo "Build directory does not exist, creating..."
          mkdir build  # Создаем папку build, если она не существует
        else
          echo "Build directory already exists"
        fi
        ls -la ./microservices_project/data_bus  # Смотрим содержимое после проверки

    - name: Build application for data_bus
      working-directory: ./microservices_project/data_bus
      run: |
        echo "Build step for data_bus"
        echo "Building data_bus..." > build/output.txt  # Записываем файл в build

    - name: Publish build artifacts for data_bus
      uses: actions/upload-artifact@v2  # Используем стабильную версию upload-artifact
      with:
        name: data_bus-artifacts
        path: ./microservices_project/data_bus/build/output.txt  # Путь к артефактам

  # Job для order_service
  order_service:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Используем стабильную версию actions/checkout

    - name: Set up Python for order_service
      uses: actions/setup-python@v2  # Используем стабильную версию actions/setup-python
      with:
        python-version: '3.8'

    - name: Install dependencies for order_service
      working-directory: ./microservices_project/order_service
      run: |
        python -m pip install --upgrade pip
        pip install pytest  # Устанавливаем pytest

    - name: Run tests for order_service
      working-directory: ./microservices_project/order_service
      run: |
        pytest  # Запуск тестов для order_service

    - name: Check if build directory exists before creation (order_service)
      working-directory: ./microservices_project/order_service
      run: |
        echo "Checking if build directory exists:"
        ls -la ./microservices_project/order_service  # Проверка содержимого директории
        if [ ! -d "./microservices_project/order_service/build" ]; then
          echo "Build directory does not exist, creating..."
          mkdir build  # Создаем папку build, если она не существует
        else
          echo "Build directory already exists"
        fi
        ls -la ./microservices_project/order_service  # Смотрим содержимое после проверки

    - name: Build application for order_service
      working-directory: ./microservices_project/order_service
      run: |
        echo "Build step for order_service"
        echo "Building order_service..." > build/output.txt  # Записываем файл в build

    - name: Publish build artifacts for order_service
      uses: actions/upload-artifact@v2  # Используем стабильную версию upload-artifact
      with:
        name: order_service-artifacts
        path: ./microservices_project/order_service/build/output.txt  # Путь к артефактам для order_service

  # Job для user_service
  user_service:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Используем стабильную версию actions/checkout

    - name: Set up Python for user_service
      uses: actions/setup-python@v2  # Используем стабильную версию actions/setup-python
      with:
        python-version: '3.8'

    - name: Install dependencies for user_service
      working-directory: ./microservices_project/user_service
      run: |
        python -m pip install --upgrade pip
        pip install pytest  # Устанавливаем pytest

    - name: Run tests for user_service
      working-directory: ./microservices_project/user_service
      run: |
        pytest  # Запуск тестов для user_service

    - name: Check if build directory exists before creation (user_service)
      working-directory: ./microservices_project/user_service
      run: |
        echo "Checking if build directory exists:"
        ls -la ./microservices_project/user_service  # Проверка содержимого директории
        if [ ! -d "./microservices_project/user_service/build" ]; then
          echo "Build directory does not exist, creating..."
          mkdir build  # Создаем папку build, если она не существует
        else
          echo "Build directory already exists"
        fi
        ls -la ./microservices_project/user_service  # Смотрим содержимое после проверки

    - name: Build application for user_service
      working-directory: ./microservices_project/user_service
      run: |
        echo "Build step for user_service"
        echo "Building user_service..." > build/output.txt  # Записываем файл в build

    - name: Publish build artifacts for user_service
      uses: actions/upload-artifact@v2  # Используем стабильную версию upload-artifact
      with:
        name: user_service-artifacts
        path: ./microservices_project/user_service/build/output.txt  # Путь к артефактам для user_service
